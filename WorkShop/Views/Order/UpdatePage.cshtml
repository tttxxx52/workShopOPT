@model WorkShop.Models.Order
@{
    ViewBag.Title = "UpdatePage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<script>
 

</script>



<div id="updateOrder" class="updateOrder">
    <h3>修改訂單</h3>
    @using (Html.BeginForm("DoUpdate", "Order", FormMethod.Post, new { @id = "updateForm" }))
    {
        @Html.AntiForgeryToken()

        <table class="table table-bordered">
            <tr>
                <td>
                    @Html.LabelFor(model => model.OrderID)
                </td>
                <td colspan="4">
                    @Html.TextBoxFor(model => model.OrderID, new { Value = ViewBag.orderData.OrderID , @class = "k-textbox" , required = "required" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.CustomerName)
                </td>
                <td colspan="4">
                    @Html.DropDownListFor(model => model.CustomerID, (List<SelectListItem>)ViewBag.customerData, "請選擇", new { required = "required" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.EmployeeName)
                </td>
                <td colspan="4">
                    @Html.DropDownListFor(model => model.EmployeeID, (List<SelectListItem>)ViewBag.empData, string.Empty, new { required = "required" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.OrderDate)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.OrderDate, new { @type = "date", Value = ViewBag.OrderDate, required = "required" })
                </td>
                <td>
                    @Html.LabelFor(model => model.RequiredDate)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.RequiredDate, new { @type = "date", Value = ViewBag.RequiredDate, @data_greaterdate_msg = "error", required = "required" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.ShippedDate)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ShippedDate, new { @type = "date", Value = ViewBag.ShippedDate, @data_greaterdate_msg = "error", required = "required" })
                </td>
                <td>
                    @Html.LabelFor(model => model.ShipperName)
                </td>
                <td colspan="4">
                    @Html.DropDownListFor(model => model.ShipperID, (List<SelectListItem>)ViewBag.shipperData, string.Empty, new { required = "required" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Freight)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.Freight, new { Value = ViewBag.orderData.Freight, @class = "k-textbox" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.ShipCountry)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ShipCountry, new { Value = ViewBag.orderData.ShipCountry, @class = "k-textbox" })
                </td>
                <td>
                    @Html.LabelFor(model => model.ShipCity)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ShipCity, new { Value = ViewBag.orderData.ShipCity, @class = "k-textbox" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.ShipRegion)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ShipRegion, new { Value = ViewBag.orderData.ShipRegion, @class = "k-textbox" })
                </td>
                <td>
                    @Html.LabelFor(model => model.ShipPostalCode)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ShipPostalCode, new { Value = ViewBag.orderData.ShipPostalCode, @class = "k-textbox" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.ShipAddress)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ShipAddress, new { Value = ViewBag.orderData.ShipAddress, @class = "k-textbox" })
                </td>
                <td>
                    @Html.LabelFor(model => model.ShipName)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ShipName, new { Value = ViewBag.orderData.ShipName, @class = "k-textbox" })
                </td>
            </tr>
            <tr>
                <td>訂單金額總計</td>
                <td id="total" colspan="4">@ViewBag.Total</td>
            </tr>
            <tr>
                <td></td>
                <td colspan="4">
                    <input type="submit" value="存檔"class="k-button">
                    <input type="button" value="刪除本筆訂單" onclick="location.href='/Order/DoDelete?OrderID=@ViewBag.orderData.OrderID'"class="k-button">
                    <input type="button" onclick="location.href='./Index';" value="回前一頁"class="k-button" />
                </td>
            </tr>
        </table>

        <a onclick="AddNewDetail()" href="#">新增一筆</a>
        <table class="table table-bordered">
            <tr>
                <td>商品</td>
                <td>單價</td>
                <td>數量</td>
                <td>小計</td>
                <td></td>
            </tr>
            <tbody id="detailContent">
           
                @for (int i = 0; i < ViewBag.OrderDetails.Count; i++)
                {
                    <tr>
                        <td>@Html.DropDownListFor(model => Model.OrderDetails[i].ProductID, (List<SelectListItem>)ViewBag.productData[i], "請選擇", new { @id = "DropdowmListProduct"+i , required = "required" })</td>
                        <td>@Html.TextBoxFor(model => Model.OrderDetails[i].UnitPrice, new { @class = "k-textbox", id = "UnitPrice" + i , Value = ViewBag.OrderDetails[i].UnitPrice, onchange = "ChangePrice(this)" })</td>
                        <td>@Html.TextBoxFor(model => Model.OrderDetails[i].Qty, new { @class = "k-textbox" , Value = ViewBag.OrderDetails[i].Qty,id= "OrderDetails_0__Qty"+i, onchange = "Count(this)" })</td>
                        @{
                            double UnitPrice = Convert.ToDouble(ViewBag.OrderDetails[i].UnitPrice);
                            double Qty = Convert.ToDouble(ViewBag.OrderDetails[i].Qty);
                        }
                        <td id="count" class="count">
                            <input type="text" id=@("count"+ i) readonly value=@(Qty * UnitPrice)>
                        </td>
                        <td><button type="button" class="btnRemove">取消</button></td>
                    </tr>
                        
                            }

                @*@for (int i = ViewBag.OrderDetails.Count; i < ViewBag.OrderDetails.Count + 1; i++)
                {
                    <tr id="newDetail" style="display: none">
                        <td>@Html.DropDownListFor(model => Model.OrderDetails[0].ProductID, (List<SelectListItem>)ViewBag.productData[0], string.Empty, new { @id = "DropdowmListProduct" })</td>
                        <td>@Html.TextBoxFor(model => Model.OrderDetails[0].UnitPrice, new { @class = "UnitPrice", @id = "UnitPrice", onchange = "ChangePrice(this)" })</td>
                        <td>@Html.TextBoxFor(model => Model.OrderDetails[0].Qty, new { @class = "Qty", onchange = "Count(this)" })</td>
                        <td id="count"><input type="text"></td>
                        <td><button type="button" class="btnRemove">取消</button></td>
                    </tr>


                }*@
            </tbody>
        </table>
                            }
</div>

<script>

    $(document).ready(function () {

        $("#OrderDate").kendoDatePicker();
        $("#RequiredDate").kendoDatePicker();
        $("#ShippedDate").kendoDatePicker();
        
        $("#CustomerID").kendoDropDownList({
            dataTextField: "Text",
            dataValueField: "Value"
        });

        $("#EmployeeID").kendoDropDownList({
            dataTextField: "Text",
            dataValueField: "Value"
        });

        $("#ShipperID").kendoDropDownList({
            dataTextField: "Text",
            dataValueField: "Value"
        });


        for (var i = 0 ; i < $('#detailContent tr').length; i++ ){

            $('#DropdowmListProduct'+i+'').kendoDropDownList({
                dataTextField: "Text",
                dataValueField: "Value",
                change: function(e) {
                    var item = this.value();
                    var price = [];
                    var array = @Html.Raw(Json.Encode(@ViewBag.UnitPrice));
                    for (var i = 0;i<array.length;i++){
                        price[i] = array[i].Value;
                    }
                
                    var id = this.element.attr("id");
                    var count = id.substr(19);
                    console.log(count);
                    $('#UnitPrice'+count+'').val(price[item-1]);
                    var qty = parseInt($('input[id="OrderDetails_0__Qty'+count+'"]').val());
                    var total = qty * price[item-1] ;
                    $('input[id="count'+count+'"]').val(total)
                    Total();
                    Repeat (count)
                }
            });

        }


    });

    
    //日期驗證
    $(function () {
        var container = $("#updateOrder");
        container.kendoValidator({
            rules: {
                greaterdate: function (input) {
                    if (input.is("[data-greaterdate-msg]") && input.val() != "") {                                    
                        var date = kendo.parseDate(input.val()),
                            otherDate = kendo.parseDate($("[name=OrderDate]").val());
                        return otherDate == null || otherDate.getTime() < date.getTime();
                    }

                    return true;
                }
            }
        });
    });


    $('#detailContent').on('click', '.btnRemove', function () {
        $(this).closest('tr').remove();
    });



    function AddNewDetail() {
        var trtemplate = $('#detailContent tr').eq(0).html();
       

        //新增一列名資料
        var count = $('#detailContent tr').length;
        var trt = trtemplate.replace('id="DropdowmListProduct0"','id="DropdowmListProduct'+count+'"');
        var trt = trt.replace('UnitPrice0','UnitPrice'+count+'');
        var trt = trt.replace('OrderDetails_0__Qty0','OrderDetails_0__Qty'+count+'');

        var trt = trt.replace("OrderDetails[0].ProductID",'OrderDetails['+count+'].ProductID');
        var trt = trt.replace("OrderDetails[0].UnitPrice",'OrderDetails['+count+'].UnitPrice');
        var trt = trt.replace("OrderDetails[0].Qty",'OrderDetails['+count+'].Qty');
        var trt = trt.replace("count0",'count'+count+'');



        $('#detailContent').append('<tr>' + trt + '</tr>');
        $('#DropdowmListProduct'+count+' option[value=""]').attr('selected', 'selected');
        $('#UnitPrice'+count+'').val("")
        $('#OrderDetails_0__Qty'+count+'').val(0)
        $('#count'+count+'').val("")
        

        $('#DropdowmListProduct'+count+'').kendoDropDownList({
            dataTextField: "Text",
            dataValueField: "Value",
            change: function(e) {
                var item = this.value();
                var price = [];
                var array = @Html.Raw(Json.Encode(@ViewBag.UnitPrice));
                for (var i = 0;i<array.length;i++){
                    price[i] = array[i].Value;
                }
                $('#UnitPrice'+count+'').val(price[item-1]);
                var qty = parseInt($('input[id="OrderDetails_0__Qty'+count+'"]').val());
                var total = qty * price[item-1] ;
                $('input[id="count'+count+'"]').val(total)
                Total();
                Repeat (count)
            }
        });
    }


    function Repeat (count){
        console.log(count);
        if( $('#detailContent tr').length > 1){
            var decideRepeatVal = new Array();
            for (var i =0 ; i <  $('#detailContent tr').length; i++ ){
                var repeatVal = $('#DropdowmListProduct'+(i)+' :selected').val();
                decideRepeatVal[i] = repeatVal ;
                console.log( decideRepeatVal[i]);
                for(j=0 ; j < decideRepeatVal.length;j++){
                    for(var k=j+1;k<decideRepeatVal.length;k++){

                        if (decideRepeatVal[j] == "" ){
                            console.log("不理他");
                            return;
                        }
                        else if(decideRepeatVal[j]==decideRepeatVal[k]){
                            console.log("重複");
                            alert("商品重複，請確認");
                            debugger;
                            $('#UnitPrice'+count+'').val("")
                            $('#OrderDetails_0__Qty'+count+'').val("")
                            $('#count'+count+'').val("")
                            $('#DropdowmListProduct'+count).data("kendoDropDownList").select(0);
             
                            return;
                        }
                    }
         
                }
            }   
        }
    }


    function GetPrice(item) {
        var price = [];
        var array = @Html.Raw(Json.Encode(@ViewBag.UnitPrice));

        for (var i = 0;i<array.length;i++){
            price[i] = array[i].Value;
        }
        $(item).parent().next('td').children().val(price[item.value-1]);
    }

    function Count(item) {
        var unitprice = $(item).parent().prev('td').children().val();
        var qty = $(item).closest("input:text").val();
        var count = unitprice * qty;
        $(item).parent().next('td').children().val(count);
        Total();
    }

    function ChangePrice(item){
        var unitprice = $(item).closest("input:text").val();
        var qty = $(item).parent().next('td').children().val();
        var total = unitprice * qty;

        $(item).parent().next('td').next('td').children().val(total);
    }

    function Total(count){
        var countArray = [];
        var total = 0;
        for(var i=0;i<$('#detailContent tr').length;i++){
            a = parseInt($('input[id="count'+i+'"]').val()); 
            total += a;
        }

        document.getElementById("total").innerHTML = total;
    }

    function DoDelete(OrderID) {
        $.ajax({
            url: "/Order/DoDelete",
            type: "POST",
            data: { OrderID: OrderID },
        });
    }

    }

</script>